
import React from 'react';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { CheckCircle, Clock, XCircle } from 'lucide-react';

interface TelegramConnectionStatusProps {
  isConnected?: boolean;
  isPending?: boolean;
  error?: string | null;
  showTimeoutWarning?: boolean;
}

export const TelegramConnectionStatus: React.FC<TelegramConnectionStatusProps> = ({
  isConnected = false,
  isPending = false,
  error = null,
  showTimeoutWarning = false
}) => {
  if (isConnected) {
    return (
      <Alert className="border-green-200 bg-green-50">
        <CheckCircle className="h-4 w-4 text-green-600" />
        <AlertDescription className="text-green-800">
          ‚úÖ Telegram —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≤–∞—à–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É CallControl
        </AlertDescription>
      </Alert>
    );
  }

  if (isPending) {
    return (
      <Alert className={`${showTimeoutWarning ? 'border-yellow-200 bg-yellow-50' : 'border-blue-200 bg-blue-50'}`}>
        <Clock className={`h-4 w-4 ${showTimeoutWarning ? 'text-yellow-600' : 'text-blue-600'}`} />
        <AlertDescription className={showTimeoutWarning ? 'text-yellow-800' : 'text-blue-800'}>
          {showTimeoutWarning ? (
            <>‚è∞ –í—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ –∏—Å—Ç–µ—á–µ—Ç! –ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ Telegram.</>
          ) : (
            <>üí¨ –ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –Ω–∞–∂–º—ë—Ç–µ START –≤ Telegram, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
            –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç ‚Äî –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –±–æ—Ç.</>
          )}
        </AlertDescription>
      </Alert>
    );
  }

  if (error) {
    return (
      <Alert variant="destructive">
        <XCircle className="h-4 w-4" />
        <AlertDescription>{error}</AlertDescription>
      </Alert>
    );
  }

  return null;
};
